{"version":3,"sources":["components/BlogPostForm/BlogPostForm.js","components/ContactForm/ContactForm.js","components/BlogReadingApp/TitleList.js","components/BlogReadingApp/BlogDetail.js","components/BlogReadingApp/BlogReadingApp.js","components/BookmarkingApp/BookmarkingForm.js","components/BlogAppFull/BlogAppFull.js","App.js","reportWebVitals.js","index.js"],"names":["BlogPostForm","props","useState","blogPosts","setBlogPosts","title","setTitle","body","setBody","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","onSubmit","e","preventDefault","blogPost","value","onChange","target","name","id","type","placeholder","ContactForm","contactList","setContactList","first","setFirst","last","setLast","address","setAddress","phone","setPhone","contact","htmlFor","TitleList","blogTitlesHTML","blogs","map","blog","style","width","onClick","selectBlog","BlogDetail","BlogReadingApp","selection","setSelection","setBlogs","find","display","BookmarkingForm","tag","setTag","url","setUrl","bookmarks","setBookmarks","bookmark","console","log","BlogAppFull","App","html","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9e763c1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction BlogPostForm(props) {\n\n    const [blogPosts, setBlogPosts] = useState([]);\n    // const [counter, setCounter] = useState(1);\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('')\n\n    useEffect(() => {\n        if (localStorage.getItem('blogPosts')) {\n            setBlogPosts(JSON.parse(localStorage.getItem('blogPosts')));\n        }\n    }, []);\n\n    useEffect(() => {\n       localStorage.setItem('blogPosts', JSON.stringify(blogPosts));\n    }, [blogPosts]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const blogPost = {\n            title,\n            body,\n            // id: counter,\n        }\n        // console.log([...blogPosts])\n\n        setBlogPosts([...blogPosts, blogPost]);\n        // setCounter(counter + 1);\n\n        setTitle('')\n        setBody('')\n    }\n\n    function handleTitleChange(e) {\n        setTitle(e.target.value);\n    }\n\n    function handleBodyChange(e) {\n        setBody(e.target.value);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>BlogPostForm</h2>\n            <input value={title} onChange={ handleTitleChange} name=\"title-input\" id=\"new-title-input\" type=\"text\" placeholder=\"Title goes here\"/>\n            <input value={ body } onChange={ handleBodyChange} name=\"body-input\" id=\"new-body-input\" type=\"text\" placeholder=\"Text goes here\" />\n            <button type=\"submit\">Submit</button>\n        </form>\n\n    )\n\n}\n\nexport default BlogPostForm;","import { useState, useEffect } from \"react\";\n\nfunction ContactForm() {\n\n    const [contactList, setContactList] = useState([]);\n    const [first, setFirst] = useState('');\n    const [last, setLast] = useState('');\n    const [address, setAddress] = useState('');\n    const [phone, setPhone] = useState('');\n\n    useEffect(() => {\n        if (localStorage.getItem('contactList')) {\n            setContactList(JSON.parse(localStorage.getItem('contactList')));\n        }\n    }, []);\n\n        // console.log({contactList})\n\n    useEffect(() => {\n       localStorage.setItem('contactList', JSON.stringify(contactList));\n    }, [contactList]);\n\n        // console.log({contactList})\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const contact = {\n            first,\n            last,\n            address,\n            phone,\n        }\n\n        setContactList([...contactList, contact]);\n\n\n        setFirst('');\n        setLast('');\n        setAddress('');\n        setPhone('');\n    }\n\n\n    function handleFirstNameChange(e) {\n        setFirst(e.target.value)\n    }\n    function handleLastNameChange(e) {\n        setLast(e.target.value)\n    }\n    function handleAddressChange(e) {\n        setAddress(e.target.value)\n    }\n    function handlePhoneNumChange(e) {\n        setPhone(e.target.value)\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h2 htmlFor=\"contact-input\">\n                <label>Contact Form</label>\n            </h2>\n            <input value={first} name=\"first-name\" onChange={handleFirstNameChange} type=\"text\" placeholder=\"First Name\"/>\n            <input value={last} name=\"last-name\" onChange={handleLastNameChange} type=\"text\" placeholder=\"Last Name\"/>\n            <input value={address} name=\"address-input\" onChange={handleAddressChange} type=\"text\" placeholder=\"Address\" />\n            <input value={phone} name=\"tel-input\" onChange={handlePhoneNumChange} type=\"tel\" placeholder=\"Phone\" />\n            <button type=\"submit\">Submit</button>\n        </form>\n\n    )\n\n}\n\nexport default ContactForm;","import { useState } from 'react';\n\n\nfunction TitleList(props) {\n\n    // const [showBlogPost, setShowBlogPost] = useState(false);\n\n    const blogTitlesHTML = props.blogs.map(blog => (\n        <aside style={{ width:'30%'}}>\n            <li >\n                <button type=\"button\" onClick={() => props.selectBlog(blog.id)}>{blog.title}</button>\n            </li>\n        </aside>\n\n    ))\n\n    // console.log({blogsHTML})\n\n\n\n\n    return (\n        <ul>\n            {blogTitlesHTML}\n        </ul>\n    )\n\n}\n\nexport default TitleList;","function BlogDetail(props) {\n    return (\n        <div style={{ width: '60%' }}>\n            <h2>{props.blog.title}</h2>\n            <p>{props.blog.body}</p>\n        </div>\n    )\n\n}\n\nexport default BlogDetail;","import { useState, useEffect } from 'react';\nimport TitleList from './TitleList';\nimport BlogDetail from './BlogDetail';\n\n\nfunction BlogReadingApp() {\n    const [selection, setSelection] = useState();\n    const [blogs, setBlogs] = useState([]);\n\n\n    useEffect(() => {\n        setBlogs([\n            {\n                id:1,\n                title: 'Jimmy Goes to Publix 1',\n                body: 'Sed ullamcorper ullamcorper lacus ut consequat. Sed cursus, nisi vitae vulputate maximus, nibh enim cursus ipsum, non iaculis massa elit sed urna. Pellentesque tincidunt placerat metus sed feugiat. Nunc imperdiet quis sem sagittis aliquet. Curabitur et egestas dui, a ultrices tortor. Integer ac vehicula neque, a molestie mauris. Cras rutrum tristique nibh, at accumsan est dictum ac.'\n            },\n            {\n                id:2,\n                title: 'Jimmy Goes to Publix 2',\n                body: 'Sed ullamcorper ullamcorper lacus ut consequat. Sed cursus, nisi vitae vulputate maximus, nibh enim cursus ipsum, non iaculis massa elit sed urna. Pellentesque tincidunt placerat metus sed feugiat. Nunc imperdiet quis sem sagittis aliquet. Curabitur et egestas dui, a ultrices tortor. Integer ac vehicula neque, a molestie mauris. Cras rutrum tristique nibh, at accumsan est dictum ac.'\n            },\n            {\n                id:3,\n                title: 'Jimmy Goes to Publix 3',\n                body: 'Sed ullamcorper ullamcorper lacus ut consequat. Sed cursus, nisi vitae vulputate maximus, nibh enim cursus ipsum, non iaculis massa elit sed urna. Pellentesque tincidunt placerat metus sed feugiat. Nunc imperdiet quis sem sagittis aliquet. Curabitur et egestas dui, a ultrices tortor. Integer ac vehicula neque, a molestie mauris. Cras rutrum tristique nibh, at accumsan est dictum ac.'\n            },\n        ])\n    }, []);\n\n    let blog;\n    if (selection) {\n        blog = blogs.find(blog => blog.id === selection);\n    }\n\n    function selectBlog(id) {\n        setSelection(id);\n    }\n\n\n    return (\n        <main style={{display:'flex',}}>\n\n            <TitleList blogs={blogs} selectBlog={selectBlog} />\n            {selection &&\n                <BlogDetail blog={blog} />\n            }\n\n        </main>\n\n\n    )\n}\nexport default BlogReadingApp;","import { useState, useEffect } from 'react';\n{/* Create a bookmarking app where you can save URLs to localStorage. It should\n  have a form where you enter the URL, a title, and a \"tag\". There should be a list\n  of all the URLs, as well as a list of all the tags (this should be generated\n  dynamically). When you click on a tag, the link list should show only those tags.\n  Hint: which tag is selected is \"application state\".*/}\n\nfunction BookmarkingForm(props) {\n\n    // const [counter, setCounter] = useState(1);\n    const [title, setTitle] = useState('');\n    const [tag, setTag] = useState('');\n    const [url, setUrl] = useState('');\n    const [bookmarks, setBookmarks] =\n        useState([\n            {\n                url: 1,\n                title: 'Jimmy Goes to Publix 2',\n                tag: '2'\n            },\n            {\n                url: 2,\n                title: 'Jimmy Goes to Publix 2',\n                tag: '2'\n            },\n            {\n                url: 3,\n                title: 'Jimmy Goes to Publix 3',\n                tag: '3'\n            },\n        ]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const bookmark = {\n            title,\n            tag,\n            url,\n        }\n            console.log({bookmarks})\n            setBookmarks([...bookmarks, bookmark]);\n            setUrl('');\n            setTitle('');\n            setTag('');\n            console.log(bookmarks);\n    }\n\n\n    function handleTitleChange(e) {\n        setTitle(e.target.value);\n    }\n\n    function handleTagChange(e) {\n        setTag(e.target.value);\n    }\n\n    function handleUrlChange(e) {\n        setUrl(e.target.value);\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <label>Bookmark Form</label>\n            <input value={url} onChange={handleUrlChange} type=\"url\" name=\"url-input\" id=\"new-url\" placeholder=' URL' />\n            <input value={title} onChange={handleTitleChange} type=\"text\" name=\"caption-input\" id=\"new-title\" placeholder='Title' />\n            <input value={tag} onChange={handleTagChange} type=\"text\" name=\"caption-input\" id=\"new-tag\" placeholder='Tag' />\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\n\nexport default BookmarkingForm;","function BlogAppFull() {\n\n\n\n\n    return (\n        <div>\n            Demonstrate Full CRUD Here.\n        </div>\n    )\n}\n\nexport default BlogAppFull;","import { useState } from 'react';\nimport './App.css';\nimport BlogPostForm from './components/BlogPostForm/BlogPostForm'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport BlogReadingApp from './components/BlogReadingApp/BlogReadingApp'\nimport BookmarkingApp from './components/BookmarkingApp/BookmarkingForm'\nimport BlogAppFull from './components/BlogAppFull/BlogAppFull'\n\nfunction App() {\n\n  const [selection, setSelection] = useState('blogForm');\n\n  let html;\n\n  if (selection === 'blogForm') {\n    html = <BlogPostForm />\n  } else if (selection === 'contactForm'){\n    html = <ContactForm />\n  } else if (selection === 'blogReading') {\n    html = <BlogReadingApp />\n  } else if (selection === 'bookmarking') {\n    html = <BookmarkingApp />\n  } else if (selection === 'blogApp') {\n    html = <BlogAppFull />\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <button type=\"button\" onClick={() => setSelection('blogForm')}>Blog Form</button>\n        <button type=\"button\" onClick={() => setSelection('contactForm')}>Contact Form</button>\n        <button type=\"button\" onClick={() => setSelection('blogReading')}>Blog Reading App</button>\n        <button type=\"button\" onClick={() => setSelection('bookmarking')}>Bookmarking App</button>\n        <button type=\"button\" onClick={() => setSelection('blogApp')}> Blog App</button>\n      </header>\n\n      {html}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}